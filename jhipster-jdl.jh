entity Circle {
	circleName String required minlength(3),
    circleWorth Long required,
    startDate ZonedDateTime required,
    endDate ZonedDateTime required,
    numberOfMembers Integer required
}

entity Person {
	firstName String required minlength(3),
	lastName String required minlength(3),
	email String required,
	phoneNumber String required
}

entity Enrollments{
	personId String,
    circleId String
}

entity EnrollmentHistory {
	language Language
}


entity Address {
	streetAddress String required minlength(3),
	postalCode String required,
	city String required,
	stateProvince String required
}

entity Review {
	reviewSummery TextBlob required
}

entity Payment { 
	paymentNo Integer required,
    dueDate ZonedDateTime required,
    amount Long
}

enum Language {
    FRENCH, ENGLISH, SPANISH
}

relationship OneToMany {
	Person{payment} to Payment,
    Person{review} to Review,
    Person{enrollments} to Enrollments
}

relationship OneToOne {
	Person{address} to Address
}

relationship OneToOne {
	EnrollmentHistory{circle} to Circle,
	EnrollmentHistory{person} to Person
}

relationship OneToMany {
	Circle{enrollments} to Enrollments
}

paginate EnrollmentHistory with infinite-scroll
paginate Circle with pagination
paginate Person with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
angularSuffix * with mySuffix